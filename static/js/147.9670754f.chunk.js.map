{"version":3,"file":"static/js/147.9670754f.chunk.js","mappings":"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","sources":["Components/EditEntireResume/ProjectsEditor.jsx","../node_modules/@mui/icons-material/AddCircleOutline.js","../node_modules/@mui/icons-material/RemoveCircleOutline.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport TextareaAutosize from \"@mui/material/TextareaAutosize\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Button from \"@mui/material/Button\";\r\nimport RemoveCircleOutlineIcon from \"@mui/icons-material/RemoveCircleOutline\";\r\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport { withStyles } from \"@mui/styles\";\r\nimport styles from \"./styles\";\r\n\r\nconst ProjectsEditor = ({ classes, projects, onSave }) => {\r\n  const [isAddProjectEnabled, setIsAddProjectEnabled] = useState(false);\r\n\r\n  const handleChange = (index, name, value) => {\r\n    const updatedProjects = [...projects];\r\n    updatedProjects[index] = { ...updatedProjects[index], [name]: value };\r\n    onSave(updatedProjects);\r\n  };\r\n\r\n  const handlePointsChange = (index, pointIndex, value) => {\r\n    const updatedProjects = [...projects];\r\n    updatedProjects[index].points[pointIndex] = value;\r\n    onSave(updatedProjects);\r\n  };\r\n\r\n  const handleAddPoint = (index) => {\r\n    const updatedProjects = [...projects];\r\n    updatedProjects[index].points.push(\"\");\r\n    onSave(updatedProjects);\r\n  };\r\n\r\n  const handleRemovePoint = (index, pointIndex) => {\r\n    const updatedProjects = [...projects];\r\n    updatedProjects[index].points.splice(pointIndex, 1);\r\n    onSave(updatedProjects);\r\n  };\r\n\r\n  const handleWebsiteChange = (index, field, value) => {\r\n    const updatedProjects = [...projects];\r\n    updatedProjects[index].website = {\r\n      ...updatedProjects[index].website,\r\n      [field]: value,\r\n    };\r\n    onSave(updatedProjects);\r\n  };\r\n\r\n  const handleGithubChange = (index, githubIndex, field, value) => {\r\n    const updatedProjects = [...projects];\r\n    updatedProjects[index].github[githubIndex] = {\r\n      ...updatedProjects[index].github[githubIndex],\r\n      [field]: value,\r\n    };\r\n    onSave(updatedProjects);\r\n  };\r\n\r\n  const handleAddGithub = (index) => {\r\n    const updatedProjects = [...projects];\r\n    updatedProjects[index].github.push({ text: \"\", url: \"\" });\r\n    onSave(updatedProjects);\r\n  };\r\n\r\n  const handleRemoveGithub = (index, githubIndex) => {\r\n    const updatedProjects = [...projects];\r\n    updatedProjects[index].github.splice(githubIndex, 1);\r\n    onSave(updatedProjects);\r\n  };\r\n\r\n  const handleAddProject = () => {\r\n    const updatedProjects = [\r\n      {\r\n        name: \"\",\r\n        Stack: \"\",\r\n        date: \"\",\r\n        points: [],\r\n        website: { url: \"\", text: \"\" },\r\n        github: [],\r\n      },\r\n      ...projects,\r\n    ];\r\n    onSave(updatedProjects);\r\n  };\r\n  const handleRemoveProjects = (index) => {\r\n    const updatedProjects = projects.filter((_, i) => i !== index);\r\n    onSave(updatedProjects);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const allFieldsFilled = projects.every(\r\n      (currProject) =>\r\n        currProject.name.trim() !== \"\" &&\r\n        currProject.Stack.trim() !== \"\" &&\r\n        currProject.date.trim() !== \"\" &&\r\n        currProject.points.every((point) => point.trim() !== \"\") &&\r\n        currProject.website.url.trim() !== \"\" &&\r\n        currProject.website.text.trim() !== \"\" &&\r\n        currProject.github.every(\r\n          (github) => github.text.trim() !== \"\" && github.url.trim() !== \"\"\r\n        )\r\n    );\r\n    setIsAddProjectEnabled(allFieldsFilled);\r\n  }, [projects]);\r\n  return (\r\n    <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n      <Grid item xs={12}>\r\n        <Grid\r\n          container\r\n          spacing={1}\r\n          alignItems={\"center\"}\r\n          justifyContent={\"space-between\"}\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              variant=\"subtitle1\"\r\n              gutterBottom\r\n              className={classes.editResumeHeader}\r\n            >\r\n              Projects\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              className={classes.buttonView}\r\n              onClick={handleAddProject}\r\n              disabled={!isAddProjectEnabled}\r\n            >\r\n              <AddCircleOutlineIcon\r\n                color=\"primary\"\r\n                className={classes.addButtonStyles}\r\n              />\r\n              Add New Project\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={11}>\r\n        <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n          {projects.map((project, index) => (\r\n            <Grid item xs={12} key={index}>\r\n              <Grid\r\n                container\r\n                spacing={2}\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid item xs={12}>\r\n                  <Grid\r\n                    container\r\n                    justifyContent={\"space-between\"}\r\n                    alignItems={\"center\"}\r\n                  >\r\n                    <Grid item>\r\n                      <Typography variant=\"subtitle1\">\r\n                        Project {index + 1}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Button\r\n                        className={classes.buttonView}\r\n                        onClick={() => handleRemoveProjects(index)}\r\n                      >\r\n                        <RemoveCircleOutlineIcon\r\n                          color=\"primary\"\r\n                          className={classes.removeButtonStyles}\r\n                        />\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Grid\r\n                    container\r\n                    spacing={2}\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\"\r\n                  >\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Name\"\r\n                        value={project.name}\r\n                        onChange={(e) =>\r\n                          handleChange(index, \"name\", e.target.value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Stack\"\r\n                        value={project.Stack}\r\n                        onChange={(e) =>\r\n                          handleChange(index, \"Stack\", e.target.value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Date\"\r\n                        value={project.date}\r\n                        onChange={(e) =>\r\n                          handleChange(index, \"date\", e.target.value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Grid container>\r\n                        <Grid item xs={12}>\r\n                          <Typography variant=\"subtitle2\">Points</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          {project.points.map((point, pointIndex) => (\r\n                            <Grid\r\n                              container\r\n                              spacing={1}\r\n                              key={pointIndex}\r\n                              justifyContent=\"space-between\"\r\n                              alignItems=\"center\"\r\n                            >\r\n                              <Grid item xs={10} sm={10} md={11} lg={11}>\r\n                                <TextareaAutosize\r\n                                  minRows={2}\r\n                                  placeholder={`Point ${pointIndex + 1}`}\r\n                                  value={point}\r\n                                  onChange={(e) =>\r\n                                    handlePointsChange(\r\n                                      index,\r\n                                      pointIndex,\r\n                                      e.target.value\r\n                                    )\r\n                                  }\r\n                                  className={classes.pointsAutoSize}\r\n                                />\r\n                              </Grid>\r\n                              <Grid item>\r\n                                <Button\r\n                                  className={classes.buttonView}\r\n                                  onClick={() =>\r\n                                    handleRemovePoint(index, pointIndex)\r\n                                  }\r\n                                >\r\n                                  <RemoveCircleOutlineIcon\r\n                                    color=\"primary\"\r\n                                    className={classes.removeButtonStyles}\r\n                                  />\r\n                                </Button>\r\n                              </Grid>\r\n                            </Grid>\r\n                          ))}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <Grid container justifyContent=\"center\">\r\n                            <Grid item>\r\n                              <Button\r\n                                className={classes.buttonView}\r\n                                onClick={() => handleAddPoint(index)}\r\n                              >\r\n                                <AddCircleOutlineIcon\r\n                                  color=\"primary\"\r\n                                  className={classes.addButtonStyles}\r\n                                />{\" \"}\r\n                                Add Points\r\n                              </Button>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Grid\r\n                        container\r\n                        justifyContent=\"center\"\r\n                        alignItems=\"center\"\r\n                        spacing={2}\r\n                      >\r\n                        <Grid item xs={12}>\r\n                          <Typography variant=\"subtitle2\">Website</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <Grid\r\n                            container\r\n                            justifyContent=\"center\"\r\n                            alignItems=\"center\"\r\n                            spacing={2}\r\n                          >\r\n                            <Grid item xs={6}>\r\n                              <TextField\r\n                                fullWidth\r\n                                label=\"URL\"\r\n                                value={project.website.url}\r\n                                onChange={(e) =>\r\n                                  handleWebsiteChange(\r\n                                    index,\r\n                                    \"url\",\r\n                                    e.target.value\r\n                                  )\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                              <TextField\r\n                                fullWidth\r\n                                label=\"Text\"\r\n                                value={project.website.text}\r\n                                onChange={(e) =>\r\n                                  handleWebsiteChange(\r\n                                    index,\r\n                                    \"text\",\r\n                                    e.target.value\r\n                                  )\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Grid\r\n                        container\r\n                        justifyContent=\"center\"\r\n                        alignItems=\"center\"\r\n                        spacing={2}\r\n                      >\r\n                        <Grid item xs={12}>\r\n                          <Typography variant=\"subtitle2\">GitHub</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <Grid\r\n                            container\r\n                            justifyContent=\"space-between\"\r\n                            alignItems=\"center\"\r\n                            spacing={2}\r\n                          >\r\n                            <Grid item xs={12}>\r\n                              <Grid\r\n                                container\r\n                                spacing={2}\r\n                                justifyContent=\"space-between\"\r\n                                alignItems=\"center\"\r\n                              >\r\n                                {project.github.map((github, githubIndex) => (\r\n                                  <Grid item xs={12} key={githubIndex}>\r\n                                    <Grid\r\n                                      container\r\n                                      spacing={2}\r\n                                      justifyContent=\"space-between\"\r\n                                      alignItems=\"center\"\r\n                                    >\r\n                                      <Grid item xs={12} sm={5}>\r\n                                        <TextField\r\n                                          fullWidth\r\n                                          label={`GitHub Text ${\r\n                                            githubIndex + 1\r\n                                          }`}\r\n                                          value={github.text}\r\n                                          onChange={(e) =>\r\n                                            handleGithubChange(\r\n                                              index,\r\n                                              githubIndex,\r\n                                              \"text\",\r\n                                              e.target.value\r\n                                            )\r\n                                          }\r\n                                        />\r\n                                      </Grid>\r\n                                      <Grid item xs={12} sm={6}>\r\n                                        <TextField\r\n                                          fullWidth\r\n                                          label={`GitHub URL ${\r\n                                            githubIndex + 1\r\n                                          }`}\r\n                                          value={github.url}\r\n                                          onChange={(e) =>\r\n                                            handleGithubChange(\r\n                                              index,\r\n                                              githubIndex,\r\n                                              \"url\",\r\n                                              e.target.value\r\n                                            )\r\n                                          }\r\n                                        />\r\n                                      </Grid>\r\n                                      <Grid item xs={12} sm={1}>\r\n                                        <Button\r\n                                          className={classes.buttonView}\r\n                                          onClick={() =>\r\n                                            handleRemoveGithub(\r\n                                              index,\r\n                                              githubIndex\r\n                                            )\r\n                                          }\r\n                                        >\r\n                                          <RemoveCircleOutlineIcon\r\n                                            color=\"primary\"\r\n                                            className={\r\n                                              classes.removeButtonStyles\r\n                                            }\r\n                                          />\r\n                                        </Button>\r\n                                      </Grid>\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                ))}\r\n                              </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                              <Grid container justifyContent=\"center\">\r\n                                <Grid item>\r\n                                  <Button\r\n                                    className={classes.buttonView}\r\n                                    onClick={() => handleAddGithub(index)}\r\n                                  >\r\n                                    <AddCircleOutlineIcon\r\n                                      color=\"primary\"\r\n                                      className={classes.addButtonStyles}\r\n                                    />\r\n                                    Add Github Links\r\n                                  </Button>\r\n                                </Grid>\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Divider className={classes.divider} />\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(ProjectsEditor);\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8\"\n}), 'AddCircleOutline');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7 11v2h10v-2zm5-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8\"\n}), 'RemoveCircleOutline');"],"names":["withStyles","styles","_ref","classes","projects","onSave","isAddProjectEnabled","setIsAddProjectEnabled","useState","handleChange","index","name","value","updatedProjects","handleWebsiteChange","field","website","handleGithubChange","githubIndex","github","useEffect","allFieldsFilled","every","currProject","trim","Stack","date","points","point","url","text","_jsxs","Grid","container","spacing","justifyContent","alignItems","children","_jsx","item","xs","Typography","variant","gutterBottom","className","editResumeHeader","Button","buttonView","onClick","handleAddProject","disabled","AddCircleOutlineIcon","color","addButtonStyles","map","project","filter","_","i","handleRemoveProjects","RemoveCircleOutlineIcon","removeButtonStyles","sm","md","TextField","fullWidth","label","onChange","e","target","pointIndex","lg","TextareaAutosize","minRows","placeholder","handlePointsChange","pointsAutoSize","handleRemovePoint","splice","push","handleAddPoint","handleRemoveGithub","handleAddGithub","Divider","divider","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d"],"sourceRoot":""}