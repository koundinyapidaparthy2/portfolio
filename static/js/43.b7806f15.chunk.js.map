{"version":3,"file":"static/js/43.b7806f15.chunk.js","mappings":"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","sources":["Components/EditEntireResume/SkillsEditor.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { withStyles } from \"@mui/styles\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\r\nimport RemoveCircleOutlineIcon from \"@mui/icons-material/RemoveCircleOutline\";\r\nimport styles from \"./styles\";\r\n\r\nconst allSkills = [\r\n  \"Html\",\r\n  \"CSS\",\r\n  \"JavaScript\",\r\n  \"Typescript\",\r\n  \"ReactJs\",\r\n  \"Redux\",\r\n  \"NextJs\",\r\n  \"React Native\",\r\n  \"Python\",\r\n  \"NodeJs\",\r\n  \"GraphQl\",\r\n  \"RestApi\",\r\n  \"Aws(DynamoDb, S3)\",\r\n  \"MongoDB\",\r\n  \"GCP(GCS, Bigtable)\",\r\n  \"Firebase Storage\",\r\n  \"GitHub Actions\",\r\n  \"GCP Cloud Build\",\r\n  \"Aws(IAM, EC2, Lambda, Api Gateways, CDK, S3)\",\r\n  \"GCP(SAM, Compute Engine, GCF, Api gateway, GCS)\",\r\n];\r\n\r\nconst SkillsEditor = ({ classes, skills, onSave }) => {\r\n  const [isAddCategoryEnabled, setIsAddCategoryEnabled] = useState(false);\r\n\r\n  const handleSkillChange = (index, newSkills) => {\r\n    const updatedSkills = [...skills];\r\n    updatedSkills[index] = { ...updatedSkills[index], Skills: newSkills };\r\n    onSave(updatedSkills);\r\n  };\r\n\r\n  const handleTitleChange = (index, value) => {\r\n    const updatedSkills = [...skills];\r\n    updatedSkills[index] = { ...updatedSkills[index], title: value };\r\n    onSave(updatedSkills);\r\n  };\r\n\r\n  const handleAddCategory = () => {\r\n    const newIndex = skills.length;\r\n    const updatedSkills = [...skills, { title: \"\", Skills: [] }];\r\n    onSave(updatedSkills);\r\n  };\r\n\r\n  const handleRemoveCategory = (index) => {\r\n    const updatedSkills = skills.filter((_, i) => i !== index);\r\n    onSave(updatedSkills);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const allFieldsFilled = skills.every(\r\n      (skill) => skill.title.trim() !== \"\" && skill.Skills.length > 0\r\n    );\r\n    setIsAddCategoryEnabled(allFieldsFilled);\r\n  }, [skills]);\r\n  return (\r\n    <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n      <Grid item xs={12}>\r\n        <Grid\r\n          container\r\n          spacing={1}\r\n          alignItems={\"center\"}\r\n          justifyContent={\"space-between\"}\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              variant=\"subtitle1\"\r\n              gutterBottom\r\n              className={classes.editResumeHeader}\r\n            >\r\n              Skills\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              className={classes.buttonView}\r\n              disabled={!isAddCategoryEnabled}\r\n              onClick={handleAddCategory}\r\n            >\r\n              <AddCircleOutlineIcon\r\n                color=\"primary\"\r\n                className={classes.addButtonStyles}\r\n              />\r\n              Add New Category\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={11}>\r\n        <Grid container spacing={6} justifyContent=\"center\" alignItems=\"center\">\r\n          {skills.map((skill, index) => (\r\n            <Grid item xs={12} key={index}>\r\n              <Grid\r\n                container\r\n                spacing={2}\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid item xs={12}>\r\n                  <Grid\r\n                    container\r\n                    justifyContent={\"space-between\"}\r\n                    alignItems={\"center\"}\r\n                  >\r\n                    <Grid item>\r\n                      <Typography variant=\"subtitle1\">\r\n                        Skills Category {index + 1}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Button\r\n                        className={classes.buttonView}\r\n                        onClick={() => handleRemoveCategory(index)}\r\n                      >\r\n                        <RemoveCircleOutlineIcon\r\n                          color=\"primary\"\r\n                          className={classes.removeButtonStyles}\r\n                        />\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Grid\r\n                    container\r\n                    spacing={2}\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\"\r\n                  >\r\n                    <Grid item xs={12} sm={12} md={2} lg={2}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Title\"\r\n                        value={skill.title}\r\n                        onChange={(e) =>\r\n                          handleTitleChange(index, e.target.value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={10} lg={10}>\r\n                      <Autocomplete\r\n                        multiple\r\n                        freeSolo\r\n                        options={allSkills}\r\n                        value={skill.Skills}\r\n                        onChange={(event, newValue) =>\r\n                          handleSkillChange(index, newValue)\r\n                        }\r\n                        renderInput={(params) => {\r\n                          return (\r\n                            <TextField\r\n                              {...params}\r\n                              label=\"Skills\"\r\n                              color=\"primary\"\r\n                            />\r\n                          );\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(SkillsEditor);\r\n"],"names":["allSkills","withStyles","styles","_ref","classes","skills","onSave","isAddCategoryEnabled","setIsAddCategoryEnabled","useState","useEffect","allFieldsFilled","every","skill","title","trim","Skills","length","_jsxs","Grid","container","spacing","justifyContent","alignItems","children","_jsx","item","xs","Typography","variant","gutterBottom","className","editResumeHeader","Button","buttonView","disabled","onClick","handleAddCategory","updatedSkills","AddCircleOutlineIcon","color","addButtonStyles","map","index","filter","_","i","handleRemoveCategory","RemoveCircleOutlineIcon","removeButtonStyles","sm","md","lg","TextField","fullWidth","label","value","onChange","e","handleTitleChange","target","Autocomplete","multiple","freeSolo","options","event","newValue","handleSkillChange","newSkills","renderInput","params"],"sourceRoot":""}