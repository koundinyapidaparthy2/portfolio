{"version":3,"file":"static/js/504.024a0567.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/ArrowBack.js","../node_modules/@mui/icons-material/ArrowForward.js","../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/motion/utils/VisualElementHandler.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/events/use-dom-event.mjs","../node_modules/framer-motion/dist/es/gestures/utils/event-type.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/utils.mjs","../node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/store-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/handoff.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/hey-listen/dist/hey-listen.es.js","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/process.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/utils/warn-once.mjs","../node_modules/popmotion/dist/es/utils/wrap.mjs"],"sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20z\"\n}), 'ArrowBack');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m12 4-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z\"\n}), 'ArrowForward');","import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { env } from '../../utils/process.mjs';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    // Support deprecated exitBeforeEnter prop\n    if (exitBeforeEnter) {\n        mode = \"wait\";\n        warnOnce(false, \"Replace exitBeforeEnter with mode='wait'\");\n    }\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    let [forceRender] = useForceUpdate();\n    const forceRenderLayoutGroup = useContext(LayoutGroupContext).forceRender;\n    if (forceRenderLayoutGroup)\n        forceRender = forceRenderLayoutGroup;\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exiting = new Set();\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exiting.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1) {\n            exiting.add(key);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exiting.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exiting.forEach((key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        const onExit = () => {\n            allChildren.delete(key);\n            exiting.delete(key);\n            // Remove this child from the present children\n            const removeIndex = presentChildren.current.findIndex((presentChild) => presentChild.key === key);\n            presentChildren.current.splice(removeIndex, 1);\n            // Defer re-rendering until all exiting children have indeed left\n            if (!exiting.size) {\n                presentChildren.current = filteredChildren;\n                if (isMounted.current === false)\n                    return;\n                forceRender();\n                onExitComplete && onExitComplete();\n            }\n        };\n        childrenToRender.splice(insertionIndex, 0, React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exiting.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (env !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exiting.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { sync } from '../frameloop/index.mjs';\nimport { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => sync.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceId: presenceContext ? presenceContext.id : undefined,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    /**\n     * If we have optimised appear animations to handoff from, trigger animateChanges\n     * from a synchronous useLayoutEffect to ensure there's no flash of incorrectly\n     * styled component in the event of a hydration error.\n     */\n    useIsomorphicLayoutEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useIsomorphicLayoutEffect(() => () => visualElement && visualElement.notify(\"Unmount\"), []);\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createDefinition = (propNames) => ({\n    isEnabled: (props) => propNames.some((name) => !!props[name]),\n});\nconst featureDefinitions = {\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    inView: createDefinition([\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\",\n    ]),\n};\n\nexport { featureDefinitions };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import React__default from 'react';\n\nclass VisualElementHandler extends React__default.Component {\n    /**\n     * Update visual element props as soon as we know this update is going to be commited.\n     */\n    getSnapshotBeforeUpdate() {\n        const { visualElement, props } = this.props;\n        if (visualElement)\n            visualElement.setProps(props);\n        return null;\n    }\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\n\nexport { VisualElementHandler };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { VisualElementHandler } from './utils/VisualElementHandler.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, projectionNodeConstructor, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        let features = null;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        /**\n         *\n         */\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const lazyStrictMode = useContext(LazyContext).strict;\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            if (context.visualElement) {\n                features = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, lazyStrictMode, preloadedFeatures, projectionId, projectionNodeConstructor ||\n                    featureDefinitions.projectionNodeConstructor, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(VisualElementHandler, { visualElement: context.visualElement, props: configAndProps },\n            features,\n            React.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement))));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        if (key === \"projectionNodeConstructor\") {\n            featureDefinitions.projectionNodeConstructor = features[key];\n        }\n        else {\n            featureDefinitions[key].Component = features[key];\n        }\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => !!(value === null || value === void 0 ? void 0 : value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst sortTransformProps = (a, b) => transformPropOrder.indexOf(a) - transformPropOrder.indexOf(b);\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform({ transform, transformKeys, }, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Loop over each transform and build them into transformString\n    for (const key of transformKeys) {\n        transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","const animationProps = [\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileDrag\",\n    \"whileInView\",\n];\nconst tapProps = [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"];\nconst panProps = [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"];\nconst inViewProps = [\n    \"whileInView\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"viewport\",\n];\n/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"layout\",\n    \"layoutId\",\n    \"layoutDependency\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"drag\",\n    \"dragControls\",\n    \"dragListener\",\n    \"dragConstraints\",\n    \"dragDirectionLock\",\n    \"dragSnapToOrigin\",\n    \"_dragX\",\n    \"_dragY\",\n    \"dragElastic\",\n    \"dragMomentum\",\n    \"dragPropagation\",\n    \"dragTransition\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"layoutScroll\",\n    ...inViewProps,\n    ...tapProps,\n    ...animationProps,\n    ...panProps,\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return validMotionProps.has(key);\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, elementProps);\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) || isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const newValues = scrapeMotionValuesFromProps$1(props);\n    for (const key in props) {\n        if (isMotionValue(props[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props);\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","function isMouseEvent(event) {\n    // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.\n    if (typeof PointerEvent !== \"undefined\" && event instanceof PointerEvent) {\n        return !!(event.pointerType === \"mouse\");\n    }\n    return event instanceof MouseEvent;\n}\nfunction isTouchEvent(event) {\n    const hasTouches = !!event.touches;\n    return hasTouches;\n}\n\nexport { isMouseEvent, isTouchEvent };\n","import { isTouchEvent } from '../gestures/utils/event-type.mjs';\n\n/**\n * Filters out events not attached to the primary pointer (currently left mouse button)\n * @param eventHandler\n */\nfunction filterPrimaryPointer(eventHandler) {\n    return (event) => {\n        const isMouseEvent = event instanceof MouseEvent;\n        const isPrimaryPointer = !isMouseEvent ||\n            (isMouseEvent && event.button === 0);\n        if (isPrimaryPointer) {\n            eventHandler(event);\n        }\n    };\n}\nconst defaultPagePoint = { pageX: 0, pageY: 0 };\nfunction pointFromTouch(e, pointType = \"page\") {\n    const primaryTouch = e.touches[0] || e.changedTouches[0];\n    const point = primaryTouch || defaultPagePoint;\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction pointFromMouse(point, pointType = \"page\") {\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: isTouchEvent(event)\n            ? pointFromTouch(event, pointType)\n            : pointFromMouse(event, pointType),\n    };\n}\nconst wrapHandler = (handler, shouldFilterPrimaryPointer = false) => {\n    const listener = (event) => handler(event, extractEventInfo(event));\n    return shouldFilterPrimaryPointer\n        ? filterPrimaryPointer(listener)\n        : listener;\n};\n\nexport { extractEventInfo, wrapHandler };\n","import { isBrowser } from '../utils/is-browser.mjs';\n\n// We check for event support via functions in case they've been mocked by a testing suite.\nconst supportsPointerEvents = () => isBrowser && window.onpointerdown === null;\nconst supportsTouchEvents = () => isBrowser && window.ontouchstart === null;\nconst supportsMouseEvents = () => isBrowser && window.onmousedown === null;\n\nexport { supportsMouseEvents, supportsPointerEvents, supportsTouchEvents };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { wrapHandler } from './event-info.mjs';\nimport { supportsPointerEvents, supportsTouchEvents, supportsMouseEvents } from './utils.mjs';\n\nconst mouseEventNames = {\n    pointerdown: \"mousedown\",\n    pointermove: \"mousemove\",\n    pointerup: \"mouseup\",\n    pointercancel: \"mousecancel\",\n    pointerover: \"mouseover\",\n    pointerout: \"mouseout\",\n    pointerenter: \"mouseenter\",\n    pointerleave: \"mouseleave\",\n};\nconst touchEventNames = {\n    pointerdown: \"touchstart\",\n    pointermove: \"touchmove\",\n    pointerup: \"touchend\",\n    pointercancel: \"touchcancel\",\n};\nfunction getPointerEventName(name) {\n    if (supportsPointerEvents()) {\n        return name;\n    }\n    else if (supportsTouchEvents()) {\n        return touchEventNames[name];\n    }\n    else if (supportsMouseEvents()) {\n        return mouseEventNames[name];\n    }\n    return name;\n}\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, getPointerEventName(eventName), handler && wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { isMouseEvent } from './utils/event-type.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n\nfunction createHoverEvent(visualElement, isActive, callback) {\n    return (event, info) => {\n        if (!isMouseEvent(event) || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover\n        ? createHoverEvent(visualElement, true, onHoverStart)\n        : undefined, { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover\n        ? createHoverEvent(visualElement, false, onHoverEnd)\n        : undefined, { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { env } from '../../../utils/process.mjs';\nimport { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (env !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { useRef } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { usePointerEvent, addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart || onTap || onTapCancel || onPointerDown),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? onTapCancel && onTapCancel(event, info)\n            : onTap && onTap(event, info);\n    }\n    function onPointerCancel(event, info) {\n        if (!checkPointerEnd())\n            return;\n        onTapCancel && onTapCancel(event, info);\n    }\n    function onPointerDown(event, info) {\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        onTapStart && onTapStart(event, info);\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? onPointerDown : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const { animationState } = visualElement;\n    const onFocus = () => {\n        animationState && animationState.setActive(AnimationType.Focus, true);\n    };\n    const onBlur = () => {\n        animationState && animationState.setActive(AnimationType.Focus, false);\n    };\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"7.10.3\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @privateRemarks\n     *\n     * We could look into a `useOnChange` hook if the above lifecycle management proves confusing.\n     *\n     * ```jsx\n     * useOnChange(x, () => {})\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect) {\n        this.passiveEffect = passiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(animation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.stopAnimation = animation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.stopAnimation) {\n            this.stopAnimation();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.stopAnimation;\n    }\n    clearAnimation() {\n        this.stopAnimation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","const appearStoreId = (id, value) => `${id}: ${value}`;\n\nexport { appearStoreId };\n","import { sync } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { appearStoreId } from './store-id.mjs';\n\nfunction handoffOptimizedAppearAnimation(id, name) {\n    const { MotionAppearAnimations } = window;\n    const animationId = appearStoreId(id, transformProps.has(name) ? \"transform\" : name);\n    const animation = MotionAppearAnimations && MotionAppearAnimations.get(animationId);\n    if (animation) {\n        /**\n         * We allow the animation to persist until the next frame:\n         *   1. So it continues to play until Framer Motion is ready to render\n         *      (avoiding a potential flash of the element's original state)\n         *   2. As all independent transforms share a single transform animation, stopping\n         *      it synchronously would prevent subsequent transforms from handing off.\n         */\n        sync.render(() => {\n            /**\n             * Animation.cancel() throws so it needs to be wrapped in a try/catch\n             */\n            try {\n                animation.cancel();\n                MotionAppearAnimations.delete(animationId);\n            }\n            catch (e) { }\n        });\n        return animation.currentTime || 0;\n    }\n    else {\n        return 0;\n    }\n}\n\nexport { handoffOptimizedAppearAnimation };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","var warning = function () { };\r\nvar invariant = function () { };\r\nif (process.env.NODE_ENV !== 'production') {\r\n    warning = function (check, message) {\r\n        if (!check && typeof console !== 'undefined') {\r\n            console.warn(message);\r\n        }\r\n    };\r\n    invariant = function (check, message) {\r\n        if (!check) {\r\n            throw new Error(message);\r\n        }\r\n    };\r\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    const origin = keyframes[0];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframes.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restSpeed = 2, restDelta = 0.01, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working within what looks like a 0-1 range, change the default restDelta\n         * to 0.01\n         */\n        if (restDelta === undefined) {\n            restDelta = Math.min(Math.abs(target - origin) / 100, 0.4);\n        }\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    var _a, _b;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let latest;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes.length > 2 ? \"keyframes\" : type];\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            const state = animation.next(Math.max(0, elapsed));\n            latest = state.value;\n            if (interpolateFromNumber)\n                latest = interpolateFromNumber(latest);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(latest);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls.stop();\n        },\n        sample: (t) => {\n            return animation.next(Math.max(0, t));\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    let { keyframes, duration = 0.3, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        const sampleAnimation = animate(options);\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        let t = 0;\n        while (!state.done) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return () => {\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        const { currentTime } = animation;\n        if (currentTime) {\n            const sampleAnimation = animate(options);\n            value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n        }\n        sync.update(() => animation.cancel());\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        return () => { };\n    };\n    return elapsed ? delay(setValue, -elapsed) : setValue();\n}\n\nexport { createInstantAnimation };\n","const underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else {\n        const factory = defaultTransitions[valueKey] || defaultTransitions.default;\n        return factory(keyframes[1]);\n    }\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { warning } from 'hey-listen';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animate } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\nimport { supports } from './waapi/supports.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\"opacity\"]);\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            const animation = inertia(options);\n            return () => animation.stop();\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        const visualElement = value.owner;\n        const element = visualElement && visualElement.current;\n        const canAccelerateAnimation = supports.waapi() &&\n            acceleratedValues.has(valueName) &&\n            !options.repeatDelay &&\n            options.repeatType !== \"mirror\" &&\n            options.damping !== 0 &&\n            visualElement &&\n            element instanceof HTMLElement &&\n            !visualElement.getProps().onUpdate;\n        if (canAccelerateAnimation) {\n            /**\n             * If this animation is capable of being run via WAAPI, then do so.\n             */\n            return createAcceleratedAnimation(value, valueName, options);\n        }\n        else {\n            /**\n             * Otherwise, fall back to the main thread.\n             */\n            const animation = animate(options);\n            return () => animation.stop();\n        }\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { handoffOptimizedAppearAnimation } from '../../animation/optimized-appear/handoff.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        let valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * Make animation instant if this is a transform prop and we should reduce motion.\n         */\n        if (visualElement.shouldReduceMotion && transformProps.has(key)) {\n            valueTransition = {\n                ...valueTransition,\n                type: false,\n                delay: 0,\n            };\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (!value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = handoffOptimizedAppearAnimation(appearId, key);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isMouseEvent, isTouchEvent } from './utils/event-type.mjs';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { sync, cancelSync } from '../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { distance2D } from '../utils/distance.mjs';\nimport { frameData } from '../frameloop/data.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Because Safari doesn't trigger mouseup events when it's above a `<select>`\n            if (isMouseEvent(event) && event.buttons === 0) {\n                this.handlePointerUp(event, info);\n                return;\n            }\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (isTouchEvent(event) && event.touches.length > 1)\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: AnyPointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints === null || constraints === void 0 ? void 0 : constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, ((_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst setAndResetVelocity = (value, to) => {\n    // Looks odd but setting it twice doesn't render, it'll just\n    // set both prev and current to the latest value\n    value.set(to, false);\n    value.set(to);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        setAndResetVelocity(value, origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                setAndResetVelocity(value, to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { env } from '../utils/process.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"Unmount\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures(renderedProps, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (env !== \"production\" && preloadedFeatures && isStrict) {\n            invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props), this.prevMotionValues);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (this.hasValue(key))\n            this.removeValue(key);\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n        this.bindToMotionValue(key, value);\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    /**\n     * Get a motion value for this key. If called with a default\n     * value, we'll create one if none exists.\n     */\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"7.10.3\", `Attempting to mix Framer Motion versions ${nextValue.version} with 7.10.3 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;\n            this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            const transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues))\n                return undefined;\n            if ((this.parent.relativeTarget || this.parent.targetDelta) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            this.relativeTarget = this.relativeTargetOrigin = undefined;\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b, _c;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_c = (_b = valuesToRender.opacity) !== null && _b !== void 0 ? _b : this.latestValues.opacity) !== null && _c !== void 0 ? _c : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                const corrected = correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layoutFeatures,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        projectionNodeConstructor,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","/**\n * Browser-safe usage of process\n */\nconst defaultEnvironment = \"production\";\nconst env = typeof process === \"undefined\" || process.env === undefined\n    ? defaultEnvironment\n    : process.env.NODE_ENV || defaultEnvironment;\n\nexport { env };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","const warned = new Set();\nfunction warnOnce(condition, message, element) {\n    if (condition || warned.has(message))\n        return;\n    console.warn(message);\n    if (element)\n        console.warn(element);\n    warned.add(message);\n}\n\nexport { warnOnce };\n","const wrap = (min, max, v) => {\n    const rangeSize = max - min;\n    return ((((v - min) % rangeSize) + rangeSize) % rangeSize) + min;\n};\n\nexport { wrap };\n"],"names":["_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d","useIsMounted","isMounted","useRef","useIsomorphicLayoutEffect","current","PopChildMeasure","React","getSnapshotBeforeUpdate","prevProps","element","this","props","childRef","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","componentDidUpdate","render","children","PopChild","_ref","id","useId","ref","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","removeChild","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","context","useMemo","childId","set","isComplete","values","register","delete","undefined","forEach","_","key","PresenceContext","Provider","value","Map","getChildKey","child","AnimatePresence","exitBeforeEnter","warnOnce","forceRender","forcedRenderCount","setForcedRenderCount","useState","useCallback","sync","postRender","useForceUpdate","forceRenderLayoutGroup","useContext","LayoutGroupContext","filteredChildren","filtered","Children","isValidElement","push","onlyElements","childrenToRender","exiting","Set","presentChildren","allChildren","isInitialRender","updateChildLookup","useUnmountEffect","clear","map","presentKeys","targetKeys","numPresent","length","i","indexOf","add","get","insertionIndex","splice","onExit","removeIndex","findIndex","presentChild","has","env","console","warn","cloneElement","createContext","frameData","delta","timestamp","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","window","callback","requestAnimationFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","reduce","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","arguments","buffer","cancel","index","process","createRenderStep","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","Math","max","min","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","useVisualElement","Component","visualState","createVisualElement","parent","visualElement","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","presenceId","blockInitialAnimation","animationState","animateChanges","notify","isRefObject","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","inherit","getCurrentTreeVariants","variantLabelsAsDependency","prop","join","createDefinition","propNames","isEnabled","featureDefinitions","measureLayout","animation","exit","drag","focus","hover","tap","pan","inView","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","VisualElementHandler","React__default","setProps","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","projectionNodeConstructor","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","configAndProps","layoutId","useLayoutId","projectionId","isBrowser","lazyStrictMode","initialLayoutGroupConfig","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","createMotionProxy","createConfig","Proxy","componentCache","_target","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","layout","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","sortTransformProps","a","b","isCSSVariable","getValueAsType","type","transform","clamp","number","parse","parseFloat","alpha","scale","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","right","bottom","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","vars","transformKeys","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","sort","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","validMotionProps","isValidMotionProp","shouldForward","isValidProp","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","pathSpacing","pathOffset","latest","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","camelToDash","str","replace","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","AnimationType","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","useDomEvent","useEffect","isMouseEvent","event","PointerEvent","pointerType","MouseEvent","isTouchEvent","touches","defaultPagePoint","pageX","pageY","pointFromTouch","pointType","point","changedTouches","pointFromMouse","extractEventInfo","wrapHandler","listener","eventHandler","button","supportsPointerEvents","onpointerdown","supportsTouchEvents","ontouchstart","supportsMouseEvents","onmousedown","mouseEventNames","pointerdown","pointermove","pointerup","pointercancel","pointerover","pointerout","pointerenter","pointerleave","touchEventNames","getPointerEventName","addPointerEvent","usePointerEvent","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","createHoverEvent","isActive","info","setActive","Hover","isNodeOrChild","parentElement","combineFunctions","pipe","_len","transformers","_key","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","useIntersectionObserver","shouldObserve","rootMargin","amount","once","threshold","isIntersecting","isInView","hasEnteredView","InView","getProps","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","_ref3","fallback","makeRenderlessComponent","hook","gestureAnimations","whileInView","viewport","onTap","onTapStart","onTapCancel","whileTap","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","onPointerDown","removePointerEndListener","checkPointerEnd","Tap","onPointerUp","onPointerCancel","whileFocus","onFocus","Focus","onBlur","onHoverStart","onHoverEnd","whileHover","usePresence","safeToRemove","shallowCompare","next","prev","prevLength","isZeroValueString","addUniqueItem","arr","item","removeItem","SubscriptionManager","constructor","subscriptions","c","numSubscriptions","getSize","velocityPerSecond","velocity","frameDuration","MotionValue","init","_this","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","isNaN","owner","onChange","subscription","on","clearListeners","eventManagers","attach","passiveEffect","setWithVelocity","getPrevious","stop","Promise","resolve","stopAnimation","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","from","isWillChangeMotionValue","appearStoreId","handoffOptimizedAppearAnimation","MotionAppearAnimations","animationId","currentTime","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","instantAnimationState","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","to","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","noop","any","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","keyframes","keyframeValues","times","duration","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","flipTarget","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restSpeed","restDelta","isResolvedFromDuration","springOptions","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","power","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","framesync","update","passTimestamp","driver","repeat","repeatMax","repeatType","repeatDelay","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","driverControls","interpolateFromNumber","repeatCount","computedDuration","isForwardPlayback","animator","delay","reverseElapsed","hasRepeatDelayElapsed","sample","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","createAcceleratedAnimation","valueName","sampleAnimation","pregeneratedKeyframes","iterations","direction","animateStyle","onfinish","timeout","checkElapsed","read","createInstantAnimation","setValue","underDampedSpring","criticallyDampedSpring","linearTween","keyframesTransition","defaultTransitions","getDefaultTransition","valueKey","isAnimatable","isZero","getZeroUnit","potentialUnitType","getValueTransition","featureTests","waapi","Element","results","supports","acceleratedValues","createMotionValueAnimation","valueTransition","isTargetAnimatable","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","bounceStiffness","bounceDamping","currentAnimation","isOutOfBounds","findNearestBoundary","startAnimation","startSpring","boundary","heading","checkBoundary","inertia","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","HTMLElement","animateVariant","variant","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","animations","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","animateChildren","first","last","willChange","animationTypeState","getState","shouldBlockAnimation","shouldReduceMotion","appearId","remove","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","Infinity","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","subscribe","PanSession","handlers","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","buttons","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","dragControls","groupDragControls","cssVariableRegex","maxDepth","getVariableValue","depth","token","exec","parseCSSVariable","getComputedStyle","getPropertyValue","positionalKeys","isPositionalKey","setAndResetVelocity","isNumOrPxType","BoundingBoxDimension","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","positionalValues","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","display","setStaticValue","targetBbox","_ref12","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","scheduleRender","baseTarget","initialValues","initialMotionValues","_props","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addListener","initPrefersReducedMotion","_c","valueIsTransform","removeOnChange","latestValue","isTransformDirty","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","isStrict","ProjectionNodeConstructor","layoutScroll","setOptions","alwaysMeasureLayout","animationType","initialPromotionConfig","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","getVariant","getClosestVariantNode","numVariantProps","closestVariantNode","removeValueFromRenderState","readValue","readValueFromInstance","setBaseTarget","valueFromInitial","getBaseTargetFromProps","args","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","super","getAttribute","createDomVisualElement","pixelsToPercent","pixels","correctBorderRadius","correct","node","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","layoutDependency","willUpdate","promote","relegate","getStack","members","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","applyTo","boxShadow","layoutFeatures","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","prevLead","lead","indexOfNode","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","_d","_e","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","isTreeAnimating","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","notifyListeners","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","preRender","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","stack","getPrevLead","hasRotate","resetValues","styles","visibility","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","featureBundle","motion","createDomMotionConfig","useLayoutEffect","warned","condition","message","wrap","rangeSize"],"sourceRoot":""}