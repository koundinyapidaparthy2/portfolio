{"version":3,"file":"static/js/925.46af25c2.chunk.js","mappings":"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","sources":["Components/ReusedComponents/TextField.jsx","Components/EditEntireResume/EducationEditor.jsx","Components/EditEntireResume/ExperienceEditor.jsx","Components/EditEntireResume/SkillsEditor.jsx","Components/EditEntireResume/ProjectsEditor.jsx","Components/EditEntireResume/PersonalDetailsEditor.jsx","Components/EditEntireResume/EditResume.jsx","Components/EditEntireResume/index.js"],"sourcesContent":["import React from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\n// Reusable TextField component\r\nconst CustomTextField = ({ label, value, onChange, ...props }) => {\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      label={label}\r\n      value={value}\r\n      onChange={onChange}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CustomTextField;\r\n","import React, { useState } from \"react\";\r\nimport TextField from \"../ReusedComponents/TextField\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  editResumeHeader: {\r\n    ...((theme || {}).commonStyles || {}).textVariant2,\r\n  },\r\n}));\r\nconst EducationEditor = ({ education, onSave }) => {\r\n  const classes = useStyles();\r\n  const handleChange = (index, name, value) => {\r\n    const updatedEducation = [...education];\r\n    updatedEducation[index] = { ...updatedEducation[index], [name]: value };\r\n    onSave(updatedEducation);\r\n  };\r\n  return (\r\n    <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n      <Grid item xs={12}>\r\n        <Typography\r\n          variant=\"subtitle1\"\r\n          gutterBottom\r\n          className={classes.editResumeHeader}\r\n        >\r\n          Education\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={11}>\r\n        <Grid container spacing={2}>\r\n          {education.map((edu, index) => (\r\n            <Grid item xs={12} key={index}>\r\n              <Grid\r\n                container\r\n                spacing={2}\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid item xs={12}>\r\n                  <Typography variant=\"subtitle1\">\r\n                    Education {index + 1}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Grid\r\n                    container\r\n                    spacing={2}\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\"\r\n                  >\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        label=\"University\"\r\n                        value={edu.university}\r\n                        onChange={(e) =>\r\n                          handleChange(index, \"university\", e.target.value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        label=\"Degree\"\r\n                        value={edu.studied}\r\n                        onChange={(e) =>\r\n                          handleChange(index, \"studied\", e.target.value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        label=\"GPA\"\r\n                        value={edu.gpa}\r\n                        onChange={(e) =>\r\n                          handleChange(index, \"gpa\", e.target.value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        label=\"Graduation Date\"\r\n                        value={edu.graduationDate}\r\n                        onChange={(e) =>\r\n                          handleChange(index, \"graduationDate\", e.target.value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        label=\"Location\"\r\n                        value={edu.location}\r\n                        onChange={(e) =>\r\n                          handleChange(index, \"location\", e.target.value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default EducationEditor;\r\n","import React, { useState } from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport TextareaAutosize from \"@mui/material/TextareaAutosize\";\r\nimport TextField from \"../ReusedComponents/TextField\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  editResumeHeader: {\r\n    ...((theme || {}).commonStyles || {}).textVariant2,\r\n  },\r\n}));\r\nconst ExperienceEditor = ({ experience, onSave }) => {\r\n  const classes = useStyles();\r\n  const handleChange = (index, name, value) => {\r\n    const updatedExperience = [...experience];\r\n    updatedExperience[index] = { ...updatedExperience[index], [name]: value };\r\n    onSave(updatedExperience);\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n      <Grid item xs={12}>\r\n        <Typography\r\n          variant=\"subtitle1\"\r\n          gutterBottom\r\n          className={classes.editResumeHeader}\r\n        >\r\n          Experience\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={11}>\r\n        <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n          {experience.map((exp, index) => (\r\n            <Grid item xs={12} key={index}>\r\n              <Grid\r\n                container\r\n                spacing={2}\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid item xs={12}>\r\n                  <Typography variant=\"subtitle1\">\r\n                    Experience {index + 1}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Grid\r\n                    container\r\n                    spacing={2}\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\"\r\n                  >\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        label=\"Company Name\"\r\n                        value={exp.companyName}\r\n                        onChange={(e) =>\r\n                          handleChange(index, \"companyName\", e.target.value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        label=\"Role\"\r\n                        value={exp.role}\r\n                        onChange={(e) =>\r\n                          handleChange(index, \"role\", e.target.value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        label=\"Location\"\r\n                        value={exp.location}\r\n                        onChange={(e) =>\r\n                          handleChange(index, \"location\", e.target.value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        label=\"Date\"\r\n                        value={exp.date}\r\n                        onChange={(e) =>\r\n                          handleChange(index, \"date\", e.target.value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextareaAutosize\r\n                        minRows={2}\r\n                        placeholder=\"Points\"\r\n                        value={exp.points.join(\", \")}\r\n                        onChange={(e) =>\r\n                          handleChange(\r\n                            index,\r\n                            \"points\",\r\n                            e.target.value.split(\",\").map((p) => p.trim())\r\n                          )\r\n                        }\r\n                        style={{ width: \"100%\", padding: \"8px\" }}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ExperienceEditor;\r\n","import React, { useState } from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport TextField from \"../ReusedComponents/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\r\nimport RemoveCircleOutlineIcon from \"@mui/icons-material/RemoveCircleOutline\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  editResumeHeader: {\r\n    ...((theme || {}).commonStyles || {}).textVariant2,\r\n  },\r\n  buttonView: {\r\n    ...((theme || {}).commonStyles || {}).buttonVariant1,\r\n  },\r\n}));\r\n\r\nconst allSkills = [\r\n  \"Html\",\r\n  \"CSS\",\r\n  \"JavaScript\",\r\n  \"Typescript\",\r\n  \"ReactJs\",\r\n  \"Redux\",\r\n  \"NextJs\",\r\n  \"React Native\",\r\n  \"Python\",\r\n  \"NodeJs\",\r\n  \"GraphQl\",\r\n  \"RestApi\",\r\n  \"Aws(DynamoDb, S3)\",\r\n  \"MongoDB\",\r\n  \"GCP(GCS, Bigtable)\",\r\n  \"Firebase Storage\",\r\n  \"GitHub Actions\",\r\n  \"GCP Cloud Build\",\r\n  \"Aws(IAM, EC2, Lambda, Api Gateways, CDK, S3)\",\r\n  \"GCP(SAM, Compute Engine, GCF, Api gateway, GCS)\",\r\n];\r\n\r\nconst SkillsEditor = ({ skills, onSave }) => {\r\n  const classes = useStyles();\r\n\r\n  const handleSkillChange = (index, newSkills) => {\r\n    const updatedSkills = [...skills];\r\n    updatedSkills[index] = { ...updatedSkills[index], Skills: newSkills };\r\n    onSave(updatedSkills);\r\n  };\r\n\r\n  const handleTitleChange = (index, value) => {\r\n    const updatedSkills = [...skills];\r\n    updatedSkills[index] = { ...updatedSkills[index], title: value };\r\n    onSave(updatedSkills);\r\n  };\r\n\r\n  const handleAddCategory = () => {\r\n    const updatedSkills = [...skills, { title: \"\", Skills: [] }];\r\n    onSave(updatedSkills);\r\n  };\r\n\r\n  const handleRemoveCategory = (index) => {\r\n    const updatedSkills = skills.filter((_, i) => i !== index);\r\n    onSave(updatedSkills);\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n      <Grid item xs={12}>\r\n        <Typography\r\n          variant=\"subtitle1\"\r\n          gutterBottom\r\n          className={classes.editResumeHeader}\r\n        >\r\n          Skills\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={11}>\r\n        <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n          {skills.map((skill, index) => (\r\n            <Grid item xs={12} key={index}>\r\n              <Grid\r\n                container\r\n                spacing={2}\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid item xs={12}>\r\n                  <Typography variant=\"subtitle1\">\r\n                    Skills Category {index + 1}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Grid\r\n                    container\r\n                    spacing={2}\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\"\r\n                  >\r\n                    <Grid item xs={12} sm={12} md={12} lg={2}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Title\"\r\n                        value={skill.title}\r\n                        onChange={(e) =>\r\n                          handleTitleChange(index, e.target.value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} lg={10}>\r\n                      <Autocomplete\r\n                        multiple\r\n                        freeSolo\r\n                        options={allSkills}\r\n                        value={skill.Skills}\r\n                        onChange={(event, newValue) =>\r\n                          handleSkillChange(index, newValue)\r\n                        }\r\n                        renderInput={(params) => (\r\n                          <TextField {...params} label=\"Skills\" />\r\n                        )}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} lg={12}>\r\n                      <Button\r\n                        className={classes.buttonView}\r\n                        onClick={() => handleRemoveCategory(index)}\r\n                      >\r\n                        <RemoveCircleOutlineIcon color=\"primary\" />\r\n                        Remove Category\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          ))}\r\n          <Grid item xs={12}>\r\n            <Grid container justifyContent=\"center\">\r\n              <Grid item>\r\n                <Button\r\n                  className={classes.buttonView}\r\n                  onClick={handleAddCategory}\r\n                >\r\n                  <AddCircleOutlineIcon color=\"primary\" />\r\n                  Add New Category\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SkillsEditor;\r\n","import React, { useState } from \"react\";\r\nimport TextField from \"../ReusedComponents/TextField\";\r\nimport TextareaAutosize from \"@mui/material/TextareaAutosize\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Button from \"@mui/material/Button\";\r\nimport RemoveCircleOutlineIcon from \"@mui/icons-material/RemoveCircleOutline\";\r\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  editResumeHeader: {\r\n    ...((theme || {}).commonStyles || {}).textVariant2,\r\n  },\r\n  buttonView: {\r\n    ...((theme || {}).commonStyles || {}).buttonVariant1,\r\n  },\r\n}));\r\nconst ProjectsEditor = ({ projects, onSave }) => {\r\n  const classes = useStyles();\r\n  const handleChange = (index, name, value) => {\r\n    const updatedProjects = [...projects];\r\n    updatedProjects[index] = { ...updatedProjects[index], [name]: value };\r\n    onSave(updatedProjects);\r\n  };\r\n\r\n  const handlePointsChange = (index, pointIndex, value) => {\r\n    const updatedProjects = [...projects];\r\n    updatedProjects[index].points[pointIndex] = value;\r\n    onSave(updatedProjects);\r\n  };\r\n\r\n  const handleAddPoint = (index) => {\r\n    const updatedProjects = [...projects];\r\n    updatedProjects[index].points.push(\"\");\r\n    onSave(updatedProjects);\r\n  };\r\n\r\n  const handleRemovePoint = (index, pointIndex) => {\r\n    const updatedProjects = [...projects];\r\n    updatedProjects[index].points.splice(pointIndex, 1);\r\n    onSave(updatedProjects);\r\n  };\r\n\r\n  const handleWebsiteChange = (index, field, value) => {\r\n    const updatedProjects = [...projects];\r\n    updatedProjects[index].website = {\r\n      ...updatedProjects[index].website,\r\n      [field]: value,\r\n    };\r\n    onSave(updatedProjects);\r\n  };\r\n\r\n  const handleGithubChange = (index, githubIndex, field, value) => {\r\n    const updatedProjects = [...projects];\r\n    updatedProjects[index].github[githubIndex] = {\r\n      ...updatedProjects[index].github[githubIndex],\r\n      [field]: value,\r\n    };\r\n    onSave(updatedProjects);\r\n  };\r\n\r\n  const handleAddGithub = (index) => {\r\n    const updatedProjects = [...projects];\r\n    updatedProjects[index].github.push({ text: \"\", url: \"\" });\r\n    onSave(updatedProjects);\r\n  };\r\n\r\n  const handleRemoveGithub = (index, githubIndex) => {\r\n    const updatedProjects = [...projects];\r\n    updatedProjects[index].github.splice(githubIndex, 1);\r\n    onSave(updatedProjects);\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n      <Grid item xs={12}>\r\n        <Typography\r\n          variant=\"subtitle1\"\r\n          gutterBottom\r\n          className={classes.editResumeHeader}\r\n        >\r\n          Projects\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={11}>\r\n        <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n          {projects.map((project, index) => (\r\n            <Grid item xs={12} key={index}>\r\n              <Grid\r\n                container\r\n                spacing={2}\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid item xs={12}>\r\n                  <Typography variant=\"subtitle1\">\r\n                    Project {index + 1}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Grid\r\n                    container\r\n                    spacing={2}\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\"\r\n                  >\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Name\"\r\n                        value={project.name}\r\n                        onChange={(e) =>\r\n                          handleChange(index, \"name\", e.target.value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Stack\"\r\n                        value={project.Stack}\r\n                        onChange={(e) =>\r\n                          handleChange(index, \"Stack\", e.target.value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Date\"\r\n                        value={project.date}\r\n                        onChange={(e) =>\r\n                          handleChange(index, \"date\", e.target.value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Grid container>\r\n                        <Grid item xs={12}>\r\n                          <Typography variant=\"subtitle2\">Points</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          {project.points.map((point, pointIndex) => (\r\n                            <Grid\r\n                              container\r\n                              spacing={1}\r\n                              key={pointIndex}\r\n                              justifyContent=\"space-between\"\r\n                              alignItems=\"center\"\r\n                            >\r\n                              <Grid item xs={11}>\r\n                                <TextareaAutosize\r\n                                  minRows={2}\r\n                                  placeholder={`Point ${pointIndex + 1}`}\r\n                                  value={point}\r\n                                  onChange={(e) =>\r\n                                    handlePointsChange(\r\n                                      index,\r\n                                      pointIndex,\r\n                                      e.target.value\r\n                                    )\r\n                                  }\r\n                                  style={{ width: \"100%\", padding: \"8px\" }}\r\n                                />\r\n                              </Grid>\r\n                              <Grid item>\r\n                                <Button\r\n                                  className={classes.buttonView}\r\n                                  onClick={() =>\r\n                                    handleRemovePoint(index, pointIndex)\r\n                                  }\r\n                                >\r\n                                  <RemoveCircleOutlineIcon color=\"primary\" />\r\n                                </Button>\r\n                              </Grid>\r\n                            </Grid>\r\n                          ))}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <Grid container justifyContent=\"center\">\r\n                            <Grid item>\r\n                              <Button\r\n                                className={classes.buttonView}\r\n                                onClick={() => handleAddPoint(index)}\r\n                              >\r\n                                <AddCircleOutlineIcon color=\"primary\" />\r\n                              </Button>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Grid\r\n                        container\r\n                        justifyContent=\"center\"\r\n                        alignItems=\"center\"\r\n                        spacing={2}\r\n                      >\r\n                        <Grid item xs={12}>\r\n                          <Typography variant=\"subtitle2\">Website</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <Grid\r\n                            container\r\n                            justifyContent=\"center\"\r\n                            alignItems=\"center\"\r\n                            spacing={2}\r\n                          >\r\n                            <Grid item xs={6}>\r\n                              <TextField\r\n                                fullWidth\r\n                                label=\"URL\"\r\n                                value={project.website.url}\r\n                                onChange={(e) =>\r\n                                  handleWebsiteChange(\r\n                                    index,\r\n                                    \"url\",\r\n                                    e.target.value\r\n                                  )\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                              <TextField\r\n                                fullWidth\r\n                                label=\"Text\"\r\n                                value={project.website.text}\r\n                                onChange={(e) =>\r\n                                  handleWebsiteChange(\r\n                                    index,\r\n                                    \"text\",\r\n                                    e.target.value\r\n                                  )\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Grid\r\n                        container\r\n                        justifyContent=\"center\"\r\n                        alignItems=\"center\"\r\n                        spacing={2}\r\n                      >\r\n                        <Grid item xs={12}>\r\n                          <Typography variant=\"subtitle2\">GitHub</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <Grid\r\n                            container\r\n                            justifyContent=\"space-between\"\r\n                            alignItems=\"center\"\r\n                            spacing={2}\r\n                          >\r\n                            <Grid item xs={12}>\r\n                              <Grid\r\n                                container\r\n                                spacing={2}\r\n                                justifyContent=\"space-between\"\r\n                                alignItems=\"center\"\r\n                              >\r\n                                {project.github.map((github, githubIndex) => (\r\n                                  <Grid item xs={12} key={githubIndex}>\r\n                                    <Grid\r\n                                      container\r\n                                      spacing={2}\r\n                                      justifyContent=\"space-between\"\r\n                                      alignItems=\"center\"\r\n                                    >\r\n                                      <Grid item xs={12} sm={5}>\r\n                                        <TextField\r\n                                          fullWidth\r\n                                          label={`GitHub Text ${\r\n                                            githubIndex + 1\r\n                                          }`}\r\n                                          value={github.text}\r\n                                          onChange={(e) =>\r\n                                            handleGithubChange(\r\n                                              index,\r\n                                              githubIndex,\r\n                                              \"text\",\r\n                                              e.target.value\r\n                                            )\r\n                                          }\r\n                                        />\r\n                                      </Grid>\r\n                                      <Grid item xs={12} sm={6}>\r\n                                        <TextField\r\n                                          fullWidth\r\n                                          label={`GitHub URL ${\r\n                                            githubIndex + 1\r\n                                          }`}\r\n                                          value={github.url}\r\n                                          onChange={(e) =>\r\n                                            handleGithubChange(\r\n                                              index,\r\n                                              githubIndex,\r\n                                              \"url\",\r\n                                              e.target.value\r\n                                            )\r\n                                          }\r\n                                        />\r\n                                      </Grid>\r\n                                      <Grid item xs={12} sm={1}>\r\n                                        <Button\r\n                                          className={classes.buttonView}\r\n                                          onClick={() =>\r\n                                            handleRemoveGithub(\r\n                                              index,\r\n                                              githubIndex\r\n                                            )\r\n                                          }\r\n                                        >\r\n                                          <RemoveCircleOutlineIcon color=\"primary\" />\r\n                                        </Button>\r\n                                      </Grid>\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                ))}\r\n                              </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                              <Grid container justifyContent=\"center\">\r\n                                <Grid item>\r\n                                  <Button\r\n                                    className={classes.buttonView}\r\n                                    onClick={() => handleAddGithub(index)}\r\n                                  >\r\n                                    <AddCircleOutlineIcon color=\"primary\" />\r\n                                  </Button>\r\n                                </Grid>\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ProjectsEditor;\r\n","import React, { useState } from \"react\";\r\nimport TextField from \"../ReusedComponents/TextField\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport PersonalImage from \"../../Images/PersonalImage.jpg\";\r\nimport Button from \"@mui/material/Button\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  editResumeHeader: {\r\n    ...((theme || {}).commonStyles || {}).textVariant2,\r\n  },\r\n  profileImageContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  profileImage: {\r\n    width: 100,\r\n    height: 100,\r\n    borderRadius: \"50%\",\r\n    objectFit: \"cover\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  imageInput: {\r\n    display: \"none\",\r\n  },\r\n  buttonView: {\r\n    ...((theme || {}).commonStyles || {}).buttonVariant1,\r\n    marginTop: \"10px\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst PersonalDetailsEditor = ({ details, onSave }) => {\r\n  const classes = useStyles();\r\n\r\n  const [profileImage, setProfileImage] = useState(\r\n    details.profileImage || PersonalImage\r\n  );\r\n\r\n  const handleChange = (name, value) => {\r\n    onSave((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleImageChange = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setProfileImage(reader.result);\r\n        onSave((prev) => ({ ...prev, profileImage: reader.result }));\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n  const handleButtonClick = () => {\r\n    document.getElementById(\"profileImageInput\").click();\r\n  };\r\n  return (\r\n    <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n      <Grid item xs={12}>\r\n        <Typography\r\n          variant=\"subtitle1\"\r\n          gutterBottom\r\n          className={classes.editResumeHeader}\r\n        >\r\n          Personal Details\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={12} sm={4} className={classes.profileImageContainer}>\r\n        <div\r\n          style={{\r\n            width: \"10vw\",\r\n            height: \"10vw\",\r\n            borderRadius: \"50%\",\r\n            backgroundImage: `url(${profileImage})`,\r\n            backgroundSize: \"cover\",\r\n            backgroundPosition: \"center\",\r\n            opacity: 1,\r\n            boxShadow: \"rgb(126 120 120 / 40%) 0px 0px 29px 0px\",\r\n          }}\r\n        ></div>\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          className={classes.imageInput}\r\n          onChange={handleImageChange}\r\n          id=\"profileImageInput\"\r\n        />\r\n\r\n        <Button\r\n          aria-label=\"profileImageInput\"\r\n          color=\"primary\"\r\n          className={classes.buttonView}\r\n          onClick={handleButtonClick}\r\n        >\r\n          Change Profile Image\r\n        </Button>\r\n      </Grid>\r\n      <Grid item xs={11}>\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              label=\"Phone Number\"\r\n              type=\"tel\"\r\n              value={details.contactNumber}\r\n              onChange={(e) => handleChange(\"contactNumber\", e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              value={details.contactEmail}\r\n              onChange={(e) => handleChange(\"contactEmail\", e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              label=\"Alternate Email\"\r\n              type=\"email\"\r\n              value={details.altEmail}\r\n              onChange={(e) => handleChange(\"altEmail\", e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              label=\"LinkedIn\"\r\n              type=\"url\"\r\n              value={details.linkedinLink}\r\n              onChange={(e) => handleChange(\"linkedinLink\", e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              label=\"GitHub\"\r\n              type=\"url\"\r\n              value={details.githubLink}\r\n              onChange={(e) => handleChange(\"githubLink\", e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              label=\"Portfolio\"\r\n              type=\"url\"\r\n              value={details.portfolioLink}\r\n              onChange={(e) => handleChange(\"portfolioLink\", e.target.value)}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default PersonalDetailsEditor;\r\n","import React, { useState } from \"react\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Fallback from \"../Fallback\";\r\nimport EducationEditor from \"./EducationEditor\";\r\nimport ExperienceEditor from \"./ExperienceEditor\";\r\nimport SkillsEditor from \"./SkillsEditor\";\r\nimport ProjectsEditor from \"./ProjectsEditor\";\r\nimport ContactEditor from \"./PersonalDetailsEditor\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  editResumeHeader: {\r\n    ...((theme || {}).commonStyles || {}).textVariant2,\r\n  },\r\n  buttonView: {\r\n    ...((theme || {}).commonStyles || {}).buttonVariant1,\r\n  },\r\n  submit: {\r\n    ...((theme || {}).commonStyles || {}).buttonVariant1,\r\n    fontSize: \"14px\",\r\n  },\r\n  formActions: {\r\n    margin: \"40px 0px 30px 0px\",\r\n  },\r\n}));\r\nconst EditEntireResume = ({ initialValues, loading }) => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n\r\n  const [personalDetails, setPersonalDetails] = useState(\r\n    initialValues.contactDetails\r\n  );\r\n  const [education, setEducation] = useState(initialValues.education);\r\n  const [experience, setExperience] = useState(initialValues.experience);\r\n  const [skills, setSkills] = useState(initialValues.skills);\r\n  const [projects, setProjects] = useState(initialValues.projects);\r\n  const handleSubmit = () => {};\r\n\r\n  const goToAestheticView = () => {\r\n    navigate(\"/\");\r\n  };\r\n  const goToPdfView = () => {\r\n    navigate(\"/pdf\");\r\n  };\r\n  if (loading) {\r\n    return <Fallback />;\r\n  }\r\n  return (\r\n    <Grid container spacing={3} justifyContent=\"center\" alignItems=\"center\">\r\n      <Grid item xs={11}>\r\n        <Grid item xs={12}>\r\n          <Grid\r\n            container\r\n            spacing={2}\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item>\r\n              <Typography variant=\"h6\" className={classes.editResumeHeader}>\r\n                Edit Resume\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Grid container spacing={2} alignItems=\"center\">\r\n                <Grid item>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    className={classes.buttonView}\r\n                    onClick={goToAestheticView}\r\n                  >\r\n                    AESTHETIC VIEW\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    className={classes.buttonView}\r\n                    onClick={goToPdfView}\r\n                  >\r\n                    PDF VIEW\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={11}>\r\n        <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n          <Grid item xs={12}>\r\n            <ContactEditor\r\n              details={personalDetails}\r\n              onSave={setPersonalDetails}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <EducationEditor education={education} onSave={setEducation} />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <ExperienceEditor experience={experience} onSave={setExperience} />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <SkillsEditor skills={skills} onSave={setSkills} />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <ProjectsEditor projects={projects} onSave={setProjects} />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={11} className={classes.formActions}>\r\n        <Grid container justifyContent=\"flex-end\">\r\n          <Grid item>\r\n            <Grid\r\n              container\r\n              spacing={4}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              <Grid item>\r\n                <Typography className={classes.editResumeHeader}>\r\n                  cancel\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button className={classes.submit} onClick={handleSubmit}>\r\n                  Submit\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default EditEntireResume;\r\n","import { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport EditResume from \"./EditResume\";\r\nimport { getPersonalDetails, getInitAppLoading } from \"../../selectors\";\r\nconst stateProps = (state) => {\r\n  const personalDetails = getPersonalDetails(state);\r\n  const loading = getInitAppLoading(state);\r\n  return {\r\n    initialValues: {\r\n      contactDetails: {\r\n        contactNumber: personalDetails.contactNumber || \"\",\r\n        contactEmail: personalDetails.contactEmail || \"\",\r\n        altEmail: personalDetails.altEmail || \"\",\r\n        linkedinLink: personalDetails.linkedinLink || \"\",\r\n        githubLink: personalDetails.githubLink || \"\",\r\n        portfolioLink: personalDetails.portfolioLink || \"\",\r\n      },\r\n      education: personalDetails.education || [],\r\n      experience: personalDetails.experience || [],\r\n      skills: personalDetails.skills || [],\r\n      projects: personalDetails.projects || [],\r\n    },\r\n    loading,\r\n  };\r\n};\r\nconst bindActionProps = (dispatch) =>\r\n  bindActionCreators(\r\n    {\r\n      onSubmit: () => {},\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(stateProps, bindActionProps)(EditResume);\r\n"],"names":["_ref","label","value","onChange","props","_jsx","TextField","fullWidth","useStyles","makeStyles","theme","editResumeHeader","commonStyles","textVariant2","education","onSave","classes","handleChange","index","name","updatedEducation","_jsxs","Grid","container","spacing","justifyContent","alignItems","children","item","xs","Typography","variant","gutterBottom","className","map","edu","university","e","target","sm","studied","gpa","graduationDate","location","experience","updatedExperience","exp","companyName","role","date","TextareaAutosize","minRows","placeholder","points","join","split","p","trim","style","width","padding","buttonView","buttonVariant1","allSkills","skills","skill","md","lg","title","handleTitleChange","updatedSkills","Autocomplete","multiple","freeSolo","options","Skills","event","newValue","handleSkillChange","newSkills","renderInput","params","Button","onClick","filter","_","i","handleRemoveCategory","RemoveCircleOutlineIcon","color","handleAddCategory","AddCircleOutlineIcon","projects","updatedProjects","handleWebsiteChange","field","website","handleGithubChange","githubIndex","github","project","Stack","point","pointIndex","handlePointsChange","handleRemovePoint","splice","push","handleAddPoint","url","text","handleRemoveGithub","handleAddGithub","profileImageContainer","display","flexDirection","profileImage","height","borderRadius","objectFit","marginBottom","imageInput","marginTop","breakpoints","down","details","setProfileImage","useState","PersonalImage","prev","backgroundImage","backgroundSize","backgroundPosition","opacity","boxShadow","type","accept","file","files","reader","FileReader","onloadend","result","readAsDataURL","id","handleButtonClick","document","getElementById","click","contactNumber","contactEmail","altEmail","linkedinLink","githubLink","portfolioLink","submit","fontSize","formActions","margin","initialValues","loading","navigate","useNavigate","personalDetails","setPersonalDetails","contactDetails","setEducation","setExperience","setSkills","setProjects","Fallback","goToAestheticView","goToPdfView","ContactEditor","EducationEditor","ExperienceEditor","SkillsEditor","ProjectsEditor","handleSubmit","connect","state","getPersonalDetails","getInitAppLoading","dispatch","bindActionCreators","onSubmit","EditResume"],"sourceRoot":""}